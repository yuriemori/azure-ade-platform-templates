{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.36.1.42791",
      "templateHash": "12974444622942001663"
    }
  },
  "parameters": {
    "envName": {
      "type": "string"
    },
    "sqlAdminPassword": {
      "type": "securestring"
    }
  },
  "variables": {
    "location": "japaneast"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "network",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "envName": {
            "value": "[parameters('envName')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "6258521303015174528"
            }
          },
          "parameters": {
            "envName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}-appgateway-nsg', parameters('envName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-Internet-HTTP",
                    "properties": {
                      "priority": 1000,
                      "access": "Allow",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "*"
                    }
                  },
                  {
                    "name": "Allow-Internet-HTTPS",
                    "properties": {
                      "priority": 1010,
                      "access": "Allow",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "Internet",
                      "destinationAddressPrefix": "*"
                    }
                  },
                  {
                    "name": "Allow-GatewayManager",
                    "properties": {
                      "priority": 1020,
                      "access": "Allow",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "65200-65535",
                      "sourceAddressPrefix": "GatewayManager",
                      "destinationAddressPrefix": "*"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}-appservice-nsg', parameters('envName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-AppGateway-to-AppService",
                    "properties": {
                      "priority": 1000,
                      "access": "Allow",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "80",
                      "sourceAddressPrefix": "10.0.1.0/24",
                      "destinationAddressPrefix": "10.0.2.0/24"
                    }
                  },
                  {
                    "name": "Allow-AppGateway-to-AppService-HTTPS",
                    "properties": {
                      "priority": 1010,
                      "access": "Allow",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "10.0.1.0/24",
                      "destinationAddressPrefix": "10.0.2.0/24"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/networkSecurityGroups",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}-default-nsg', parameters('envName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "securityRules": [
                  {
                    "name": "Allow-AppService-to-KeyVault",
                    "properties": {
                      "priority": 1000,
                      "access": "Allow",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "443",
                      "sourceAddressPrefix": "10.0.2.0/24",
                      "destinationAddressPrefix": "10.0.3.0/24"
                    }
                  },
                  {
                    "name": "Allow-AppService-to-SQL",
                    "properties": {
                      "priority": 1010,
                      "access": "Allow",
                      "direction": "Inbound",
                      "protocol": "Tcp",
                      "sourcePortRange": "*",
                      "destinationPortRange": "1433",
                      "sourceAddressPrefix": "10.0.2.0/24",
                      "destinationAddressPrefix": "10.0.3.0/24"
                    }
                  }
                ]
              }
            },
            {
              "type": "Microsoft.Network/publicIPAddresses",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}-appgateway-pip', parameters('envName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "publicIPAllocationMethod": "Static"
              }
            },
            {
              "type": "Microsoft.Network/virtualNetworks",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}-vnet', parameters('envName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "addressSpace": {
                  "addressPrefixes": [
                    "10.0.0.0/16"
                  ]
                },
                "subnets": [
                  {
                    "name": "appgateway-subnet",
                    "properties": {
                      "addressPrefix": "10.0.1.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-appgateway-nsg', parameters('envName')))]"
                      }
                    }
                  },
                  {
                    "name": "appservice-subnet",
                    "properties": {
                      "addressPrefix": "10.0.2.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-appservice-nsg', parameters('envName')))]"
                      },
                      "delegations": [
                        {
                          "name": "Microsoft.Web/serverFarms",
                          "properties": {
                            "serviceName": "Microsoft.Web/serverFarms"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "name": "default",
                    "properties": {
                      "addressPrefix": "10.0.3.0/24",
                      "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-default-nsg', parameters('envName')))]"
                      },
                      "serviceEndpoints": [
                        {
                          "service": "Microsoft.KeyVault"
                        },
                        {
                          "service": "Microsoft.Sql"
                        }
                      ]
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-appgateway-nsg', parameters('envName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-appservice-nsg', parameters('envName')))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', format('{0}-default-nsg', parameters('envName')))]"
              ]
            },
            {
              "type": "Microsoft.Network/applicationGateways",
              "apiVersion": "2022-05-01",
              "name": "[format('{0}-appgateway', parameters('envName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "name": "WAF_v2",
                  "tier": "WAF_v2",
                  "capacity": 2
                },
                "webApplicationFirewallConfiguration": {
                  "enabled": true,
                  "firewallMode": "Prevention",
                  "ruleSetType": "OWASP",
                  "ruleSetVersion": "3.0"
                },
                "gatewayIPConfigurations": [
                  {
                    "name": "appGatewayIpConfig",
                    "properties": {
                      "subnet": {
                        "id": "[format('{0}/subnets/appgateway-subnet', resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('envName'))))]"
                      }
                    }
                  }
                ],
                "frontendIPConfigurations": [
                  {
                    "name": "appGatewayFrontendIP",
                    "properties": {
                      "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-appgateway-pip', parameters('envName')))]"
                      }
                    }
                  }
                ],
                "frontendPorts": [
                  {
                    "name": "appGatewayFrontendPort80",
                    "properties": {
                      "port": 80
                    }
                  },
                  {
                    "name": "appGatewayFrontendPort443",
                    "properties": {
                      "port": 443
                    }
                  }
                ],
                "backendAddressPools": [
                  {
                    "name": "appServiceBackendPool",
                    "properties": {
                      "backendAddresses": [
                        {
                          "fqdn": "[format('{0}-fe.azurewebsites.net', parameters('envName'))]"
                        },
                        {
                          "fqdn": "[format('{0}-be.azurewebsites.net', parameters('envName'))]"
                        }
                      ]
                    }
                  }
                ],
                "backendHttpSettingsCollection": [
                  {
                    "name": "appGatewayBackendHttpSettings",
                    "properties": {
                      "port": 80,
                      "protocol": "Http",
                      "cookieBasedAffinity": "Disabled",
                      "requestTimeout": 30
                    }
                  }
                ],
                "httpListeners": [
                  {
                    "name": "appGatewayHttpListener",
                    "properties": {
                      "frontendIPConfiguration": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', format('{0}-appgateway', parameters('envName')), 'appGatewayFrontendIP')]"
                      },
                      "frontendPort": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', format('{0}-appgateway', parameters('envName')), 'appGatewayFrontendPort80')]"
                      },
                      "protocol": "Http"
                    }
                  }
                ],
                "requestRoutingRules": [
                  {
                    "name": "appServiceRoutingRule",
                    "properties": {
                      "ruleType": "Basic",
                      "httpListener": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', format('{0}-appgateway', parameters('envName')), 'appGatewayHttpListener')]"
                      },
                      "backendAddressPool": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', format('{0}-appgateway', parameters('envName')), 'appServiceBackendPool')]"
                      },
                      "backendHttpSettings": {
                        "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', format('{0}-appgateway', parameters('envName')), 'appGatewayBackendHttpSettings')]"
                      }
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-appgateway-pip', parameters('envName')))]",
                "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('envName')))]"
              ]
            }
          ],
          "outputs": {
            "vnetId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('envName')))]"
            },
            "subnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('envName'))), '2022-05-01').subnets[2].id]"
            },
            "appServiceSubnetId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Network/virtualNetworks', format('{0}-vnet', parameters('envName'))), '2022-05-01').subnets[1].id]"
            },
            "appGatewayId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/applicationGateways', format('{0}-appgateway', parameters('envName')))]"
            },
            "appGatewayPublicIPId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/publicIPAddresses', format('{0}-appgateway-pip', parameters('envName')))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "acr",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "envName": {
            "value": "[parameters('envName')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "16739093213177333814"
            }
          },
          "parameters": {
            "envName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.ContainerRegistry/registries",
              "apiVersion": "2023-01-01-preview",
              "name": "[format('{0}acr{1}', parameters('envName'), uniqueString(resourceGroup().id))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard"
              },
              "properties": {
                "adminUserEnabled": false,
                "networkRuleSet": {
                  "defaultAction": "Allow"
                },
                "policies": {
                  "quarantinePolicy": {
                    "status": "disabled"
                  },
                  "trustPolicy": {
                    "type": "Notary",
                    "status": "disabled"
                  },
                  "retentionPolicy": {
                    "status": "disabled",
                    "days": 7
                  }
                },
                "encryption": {
                  "status": "disabled"
                },
                "dataEndpointEnabled": false,
                "publicNetworkAccess": "Enabled",
                "networkRuleBypassOptions": "AzureServices"
              }
            }
          ],
          "outputs": {
            "acrId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ContainerRegistry/registries', format('{0}acr{1}', parameters('envName'), uniqueString(resourceGroup().id)))]"
            },
            "acrName": {
              "type": "string",
              "value": "[format('{0}acr{1}', parameters('envName'), uniqueString(resourceGroup().id))]"
            },
            "acrLoginServer": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', format('{0}acr{1}', parameters('envName'), uniqueString(resourceGroup().id))), '2023-01-01-preview').loginServer]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "keyvault",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "envName": {
            "value": "[parameters('envName')]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.subnetId.value]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "502631747557880359"
            }
          },
          "parameters": {
            "envName": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2023-02-01",
              "name": "[format('yuriemori-{0}-kv', parameters('envName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "sku": {
                  "family": "A",
                  "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [],
                "networkAcls": {
                  "defaultAction": "Deny",
                  "bypass": "AzureServices",
                  "virtualNetworkRules": [
                    {
                      "id": "[parameters('vnetId')]"
                    }
                  ]
                },
                "enablePurgeProtection": true,
                "enableSoftDelete": true
              }
            }
          ],
          "outputs": {
            "keyVaultId": {
              "type": "string",
              "value": "[resourceId('Microsoft.KeyVault/vaults', format('yuriemori-{0}-kv', parameters('envName')))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "sql",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "envName": {
            "value": "[parameters('envName')]"
          },
          "vnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.vnetId.value]"
          },
          "location": {
            "value": "[variables('location')]"
          },
          "sqlAdminPassword": {
            "value": "[parameters('sqlAdminPassword')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "15978020369892698150"
            }
          },
          "parameters": {
            "envName": {
              "type": "string"
            },
            "vnetId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "sqlAdminPassword": {
              "type": "securestring"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Sql/servers",
              "apiVersion": "2022-02-01-preview",
              "name": "[format('{0}-sqlsrv', parameters('envName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "administratorLogin": "sqladminuser",
                "administratorLoginPassword": "[parameters('sqlAdminPassword')]",
                "version": "12.0",
                "publicNetworkAccess": "Disabled"
              }
            },
            {
              "type": "Microsoft.Sql/servers/databases",
              "apiVersion": "2022-02-01-preview",
              "name": "[format('{0}/appdb', format('{0}-sqlsrv', parameters('envName')))]",
              "location": "[parameters('location')]",
              "properties": {
                "collation": "SQL_Latin1_General_CP1_CI_AS",
                "maxSizeBytes": 2147483648,
                "sampleName": "AdventureWorksLT"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Sql/servers', format('{0}-sqlsrv', parameters('envName')))]"
              ]
            }
          ],
          "outputs": {
            "sqlServerName": {
              "type": "string",
              "value": "[format('{0}-sqlsrv', parameters('envName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'network')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appInsights",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "envName": {
            "value": "[parameters('envName')]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "12893923580128370976"
            }
          },
          "parameters": {
            "envName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[format('{0}-appi', parameters('envName'))]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web"
              }
            }
          ],
          "outputs": {
            "instrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-appi', parameters('envName'))), '2020-02-02').InstrumentationKey]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "appService",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "envName": {
            "value": "[parameters('envName')]"
          },
          "keyVaultId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyvault'), '2022-09-01').outputs.keyVaultId.value]"
          },
          "sqlServerName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'sql'), '2022-09-01').outputs.sqlServerName.value]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appInsights'), '2022-09-01').outputs.instrumentationKey.value]"
          },
          "appServiceSubnetId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'network'), '2022-09-01').outputs.appServiceSubnetId.value]"
          },
          "acrLoginServer": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'acr'), '2022-09-01').outputs.acrLoginServer.value]"
          },
          "location": {
            "value": "[variables('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.36.1.42791",
              "templateHash": "11403950924385037804"
            }
          },
          "parameters": {
            "envName": {
              "type": "string"
            },
            "keyVaultId": {
              "type": "string"
            },
            "sqlServerName": {
              "type": "string"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "appServiceSubnetId": {
              "type": "string"
            },
            "acrLoginServer": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}-plan', parameters('envName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "P1v2",
                "tier": "PremiumV2",
                "size": "P1v2",
                "capacity": 1
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}-fe', parameters('envName'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('envName')))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('appInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "KEYVAULT_URI",
                      "value": "[parameters('keyVaultId')]"
                    },
                    {
                      "name": "SQL_SERVER_NAME",
                      "value": "[parameters('sqlServerName')]"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[format('https://{0}', parameters('acrLoginServer'))]"
                    },
                    {
                      "name": "DOCKER_ENABLE_CI",
                      "value": "true"
                    }
                  ],
                  "linuxFxVersion": "[format('DOCKER|{0}/frontend:latest', parameters('acrLoginServer'))]",
                  "vnetRouteAllEnabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('envName')))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/networkConfig",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', format('{0}-fe', parameters('envName')), 'virtualNetwork')]",
              "properties": {
                "subnetResourceId": "[parameters('appServiceSubnetId')]",
                "swiftSupported": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-fe', parameters('envName')))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/slots",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', format('{0}-fe', parameters('envName')), 'staging')]",
              "location": "[parameters('location')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('envName')))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('appInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "KEYVAULT_URI",
                      "value": "[parameters('keyVaultId')]"
                    },
                    {
                      "name": "SQL_SERVER_NAME",
                      "value": "[parameters('sqlServerName')]"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[format('https://{0}', parameters('acrLoginServer'))]"
                    },
                    {
                      "name": "DOCKER_ENABLE_CI",
                      "value": "true"
                    }
                  ],
                  "linuxFxVersion": "[format('DOCKER|{0}/frontend:staging', parameters('acrLoginServer'))]",
                  "vnetRouteAllEnabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-fe', parameters('envName')))]",
                "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('envName')))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}-be', parameters('envName'))]",
              "location": "[parameters('location')]",
              "identity": {
                "type": "SystemAssigned"
              },
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('envName')))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('appInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "KEYVAULT_URI",
                      "value": "[parameters('keyVaultId')]"
                    },
                    {
                      "name": "SQL_SERVER_NAME",
                      "value": "[parameters('sqlServerName')]"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[format('https://{0}', parameters('acrLoginServer'))]"
                    },
                    {
                      "name": "DOCKER_ENABLE_CI",
                      "value": "true"
                    }
                  ],
                  "linuxFxVersion": "[format('DOCKER|{0}/backend:latest', parameters('acrLoginServer'))]",
                  "vnetRouteAllEnabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('envName')))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/networkConfig",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', format('{0}-be', parameters('envName')), 'virtualNetwork')]",
              "properties": {
                "subnetResourceId": "[parameters('appServiceSubnetId')]",
                "swiftSupported": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-be', parameters('envName')))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/slots",
              "apiVersion": "2022-03-01",
              "name": "[format('{0}/{1}', format('{0}-be', parameters('envName')), 'staging')]",
              "location": "[parameters('location')]",
              "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('envName')))]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('appInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "KEYVAULT_URI",
                      "value": "[parameters('keyVaultId')]"
                    },
                    {
                      "name": "SQL_SERVER_NAME",
                      "value": "[parameters('sqlServerName')]"
                    },
                    {
                      "name": "DOCKER_REGISTRY_SERVER_URL",
                      "value": "[format('https://{0}', parameters('acrLoginServer'))]"
                    },
                    {
                      "name": "DOCKER_ENABLE_CI",
                      "value": "true"
                    }
                  ],
                  "linuxFxVersion": "[format('DOCKER|{0}/backend:staging', parameters('acrLoginServer'))]",
                  "vnetRouteAllEnabled": true
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-be', parameters('envName')))]",
                "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('envName')))]"
              ]
            }
          ],
          "outputs": {
            "frontendAppFqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', format('{0}-fe', parameters('envName'))), '2022-03-01').defaultHostName]"
            },
            "backendAppFqdn": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', format('{0}-be', parameters('envName'))), '2022-03-01').defaultHostName]"
            },
            "frontendAppName": {
              "type": "string",
              "value": "[format('{0}-fe', parameters('envName'))]"
            },
            "backendAppName": {
              "type": "string",
              "value": "[format('{0}-be', parameters('envName'))]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'acr')]",
        "[resourceId('Microsoft.Resources/deployments', 'appInsights')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyvault')]",
        "[resourceId('Microsoft.Resources/deployments', 'network')]",
        "[resourceId('Microsoft.Resources/deployments', 'sql')]"
      ]
    }
  ]
}